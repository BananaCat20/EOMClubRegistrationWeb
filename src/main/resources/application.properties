spring.security.oauth2.client.registration.google.client-id=126352921434-a71061l5m4bdgteutgvqjvdlma02puh6.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.accessTokenUri  =  https://www.googleapis.com/oauth2/v3/token
spring.security.oauth2.client.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.tokenName = oauth_token
spring.security.oauth2.client.authenticationScheme = query
spring.security.oauth2.client.clientAuthenticationScheme = form
spring.security.oauth2.client.scope = profile email

spring.security.oauth2.resource.userInfoUri  =  https://www.googleapis.com/userinfo/v2/me
spring.security.oauth2.resource.preferTokenInfo = false

#1. update (Update the schema if necessary)
#2. create (create the schema and destroy previous data)
#3. create-drop (create and then destroy the schema at the end of the session)
#4. none (disable ddl handling)
#5. validate (validate the schema , make no changes to the database)
spring.jpa.hibernate.ddl-auto = update
spring.datasource.url = jdbc:mysql://localhost:3306/club_register
spring.datasource.username = root
spring.datasource.password = password1
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.show-sql = true
server.servlet.session.timeout = 15
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE
#logging.level.org.thymeleaf = TRACE
logging.level.org.springframework.security=DEBUG